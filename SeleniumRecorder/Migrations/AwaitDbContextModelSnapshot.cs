// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using SeleniumRecorder.DAL;

#nullable disable

namespace SeleniumRecorder.Migrations
{
    [DbContext(typeof(AwaitDbContext))]
    partial class AwaitDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("AWAIT.Model.ElementProperty", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Key")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("TargetModelId")
                        .HasColumnType("int");

                    b.Property<string>("Value")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("TargetModelId");

                    b.ToTable("ElementProperty");
                });

            modelBuilder.Entity("AWAIT.Model.EventDataModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("EventType")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("EventData", (string)null);
                });

            modelBuilder.Entity("AWAIT.Model.TargetModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("EventDataModelId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("EventDataModelId");

                    b.ToTable("TargetModel");
                });

            modelBuilder.Entity("AWAIT.Model.ElementProperty", b =>
                {
                    b.HasOne("AWAIT.Model.TargetModel", "TargetModel")
                        .WithMany("ElementProperties")
                        .HasForeignKey("TargetModelId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("TargetModel");
                });

            modelBuilder.Entity("AWAIT.Model.TargetModel", b =>
                {
                    b.HasOne("AWAIT.Model.EventDataModel", null)
                        .WithMany("Targets")
                        .HasForeignKey("EventDataModelId");
                });

            modelBuilder.Entity("AWAIT.Model.EventDataModel", b =>
                {
                    b.Navigation("Targets");
                });

            modelBuilder.Entity("AWAIT.Model.TargetModel", b =>
                {
                    b.Navigation("ElementProperties");
                });
#pragma warning restore 612, 618
        }
    }
}
